{
  "sbg:license": "The MIT License",
  "sbg:image_url": null,
  "stdout": "",
  "sbg:cmdPreview": "/opt/samtools-0.1.19/samtools view bam_or_sam_input_file.bam -o bam_or_sam_input_file.sam",
  "requirements": [
    {
      "requirements": [
        {
          "class": "DockerRequirement",
          "dockerPull": "rabix/js-engine"
        }
      ],
      "class": "ExpressionEngineRequirement",
      "id": "#cwl-js-engine"
    }
  ],
  "sbg:latestRevision": 2,
  "sbg:toolkit": "SAMtools",
  "label": "SAMtools View Region (Large)",
  "sbg:revision": 2,
  "id": "https://cgc-api.sbgenomics.com/v2/apps/jack_digi/metadata-sandbox/samtools-region-only-large/2/raw/",
  "temporaryFailCodes": [],
  "sbg:validationErrors": [],
  "sbg:id": "jack_digi/metadata-sandbox/samtools-region-only-large/2",
  "arguments": [
    {
      "position": 0,
      "prefix": "-o",
      "valueFrom": {
        "class": "Expression",
        "engine": "#cwl-js-engine",
        "script": "{\n filepath = $job.inputs.input_bam_or_sam_file.path\n\n filename = filepath.split(\"/\").pop();\n\n file_dot_sep = filename.split(\".\");\n file_ext = file_dot_sep[file_dot_sep.length-1];\n\n new_filename = filename.substr(0,filename.lastIndexOf(\".\"));\n \n extension = '.sam';\n  \n if ((typeof $job.inputs.output_bam !== \"undefined\" && $job.inputs.output_bam === true) ||\n     (typeof $job.inputs.uncompressed_bam !== \"undefined\" && $job.inputs.uncompressed_bam === true) ||\n     (typeof $job.inputs.fast_compression !== \"undefined\" && $job.inputs.fast_compression === true))\n \textension = '.bam'\n else if ((typeof $job.inputs.print_header_only !== \"undefined\" && $job.inputs.print_header_only === true) ||\n          (typeof $job.inputs.print_count_only !== \"undefined\" && $job.inputs.print_count_only === true))\n   \textension = '.txt'\n             \n return new_filename + extension; \n}"
      },
      "separate": true
    }
  ],
  "inputs": [
    {
      "type": [
        "null",
        {
          "items": "string",
          "type": "array"
        }
      ],
      "inputBinding": {
        "position": 2,
        "itemSeparator": null,
        "sbg:cmdInclude": true,
        "separate": true
      },
      "label": "Array of regions",
      "id": "#regions_array",
      "description": "If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: `chr2' (the whole chr2), `chr2:1000000' (region starting from 1,000,000bp) or `chr2:1,000,000-2,000,000' (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based."
    },
    {
      "inputBinding": {
        "sbg:cmdInclude": true,
        "secondaryFiles": [
          ".bai"
        ]
      },
      "id": "#input_bam_or_sam_file",
      "description": "BAM or SAM input file.",
      "label": "BAM or SAM input file",
      "sbg:fileTypes": "BAM, SAM",
      "type": [
        "File"
      ]
    },
    {
      "id": "#input_index",
      "type": [
        "null",
        "File"
      ],
      "label": "Index file",
      "sbg:fileTypes": "BAI",
      "description": "Bam index (BAI) file. This is not shown in the command line but needs to be in the same directory as the bam file for region slicing."
    }
  ],
  "sbg:createdOn": 1464267589,
  "baseCommand": [
    "/opt/samtools-0.1.19/samtools",
    "view"
  ],
  "stdin": "",
  "sbg:project": "jack_digi/metadata-sandbox",
  "sbg:contributors": [
    "jack_digi"
  ],
  "sbg:modifiedBy": "jack_digi",
  "class": "CommandLineTool",
  "sbg:job": {
    "inputs": {
      "input_bam_or_sam_file": {
        "class": "File",
        "path": "bam_or_sam_input_file.bam",
        "secondaryFiles": [],
        "size": 0
      },
      "input_index": {
        "class": "File",
        "path": "/path/to/input_index.ext",
        "secondaryFiles": [],
        "size": 0
      },
      "regions_array": [
        "2:500-100"
      ]
    },
    "allocatedResources": {
      "mem": 1000,
      "cpu": 1
    }
  },
  "sbg:links": [
    {
      "label": "Homepage",
      "id": "http://samtools.sourceforge.net/"
    },
    {
      "label": "Source Code",
      "id": "https://github.com/samtools/samtools"
    },
    {
      "label": "Wiki",
      "id": "http://sourceforge.net/p/samtools/wiki/Home/"
    },
    {
      "label": "Download",
      "id": "http://sourceforge.net/projects/samtools/files/"
    },
    {
      "label": "Publication",
      "id": "http://www.ncbi.nlm.nih.gov/pubmed/19505943"
    },
    {
      "label": "Documentation",
      "id": "http://www.htslib.org/doc/samtools.html"
    }
  ],
  "outputs": [
    {
      "outputBinding": {
        "glob": "@(*.bam|*.sam|*.txt)",
        "sbg:inheritMetadataFrom": "#input_bam_or_sam_file",
        "sbg:metadata": {}
      },
      "id": "#output_bam_or_sam_file",
      "description": "Output BAM, SAM, header or count file.",
      "label": "Output BAM or SAM file",
      "sbg:fileTypes": "BAM, SAM, TEXT",
      "type": [
        "File"
      ]
    }
  ],
  "hints": [
    {
      "class": "DockerRequirement",
      "dockerPull": "images.sbgenomics.com/markop/samtools:0.1.19",
      "dockerImageId": "2fb927277493"
    },
    {
      "class": "sbg:CPURequirement",
      "value": 1
    },
    {
      "class": "sbg:MemRequirement",
      "value": 1000
    },
    {
      "class": "sbg:AWSInstanceType",
      "value": "c3.2xlarge"
    }
  ],
  "sbg:revisionsInfo": [
    {
      "sbg:modifiedOn": 1464267589,
      "sbg:revision": 0,
      "sbg:modifiedBy": "jack_digi"
    },
    {
      "sbg:modifiedOn": 1464267724,
      "sbg:revision": 1,
      "sbg:modifiedBy": "jack_digi"
    },
    {
      "sbg:modifiedOn": 1464267775,
      "sbg:revision": 2,
      "sbg:modifiedBy": "jack_digi"
    }
  ],
  "description": "SAMtools View extracts all or a subset of alignments in a SAM or BAM file. \nIt can be used to convert from BAM to SAM file formats and vice versa. It also can be used to extract the BAM header.\n\n**This is a modification of the seven bridges samtools view wrapper to only provide option to input a region of interest.**\nThis has a larger EC2 instance (c3.2xlarge) to deal with input bam files larger than 25 Gb",
  "successCodes": [],
  "sbg:modifiedOn": 1464267775,
  "sbg:toolkitVersion": "v0.1.19",
  "sbg:createdBy": "jack_digi",
  "sbg:sbgMaintained": false,
  "sbg:categories": [
    "SAM/BAM-Processing"
  ],
  "sbg:toolAuthor": "Heng Li, Sanger Institute"
}